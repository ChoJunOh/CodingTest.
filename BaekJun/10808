import sys

sentence = sys.stdin.readline().rstrip()

alphabet = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0,
            'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0,
            'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0,
            'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0,
            'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0}

for s in sentence:
    alphabet[s] += 1

for n in alphabet.values():
    print(n, end=' ')
    
----------------------------------------------------------------------------

내가 생각한 것은 딕셔너리

사전이 '단어'와 '뜻'으로 구성되어 있듯이 파이썬의 딕셔너리도 키(key)와 값(value)의 쌍으로 이루어져 있음.

딕셔너리는...

딕셔너리명 = { 키: 값, 키: 값, ... }

예를 들어보자면

ex) 점수 = {'국어': 97, '영어': 98, '수학': 100}. 내가 고등학교 때 받(기를 희망했)던 점수다.

딕셔너리를 print하면 딕셔너리 전체(key, value 모두)가 출력된다.
따라서 key값만 얻고 싶을때는 '.keys()'를 사용하고 value값만 얻고 싶을때는 '.values()'를 사용하면 된다.

score = {'kor': 97, 'eng': 98, 'math': 100}

print(score)        ### {'국어': 97, '영어': 98, '수학': 100}
print(score.keys())     ### dict_keys(['국어', '영어', '수학'])
print(score.values())    ### dict_values([97, 98, 100])

출력되는 형태를 통해 '.keys()'와 '.values()'가 리스트 형태라는 것을 알 수 있고
리스트 요소를 출력하듯이 출력하면 key값과 value값을 하나씩 출력할 수 있다.
