import math

def isPrime(num):
    if num == 1:
        return False
 
    n = int(math.sqrt(num))
 
    for k in range(2, n+1):
        if num % k == 0:
            return False
    return True

m, n = map(int, input().split())
for k in range(m, n+1):
    if isPrime(k):
        print(k)
        
-----------------------------------------------

내가 명색이 컴공인데 고작 소수 구하기 하나 못 풀겠냐? EASY하네

라고 하면 시간초과 뜬다. 접근법이 달라야 한다. 이 쯤 되면 내가 코딩테스트를 보는 건지 수학 테스트를 보는 건지 헷갈린다.

여러 힌트들 중에서 그럴 듯 한 것을 발견하였다. 출처는 https://hongku.tistory.com/176

즉 이 분의 말씀은 특정 수 N의 약수는 아무리 커봐야 N/2을 넘지 못 한다. 즉, 1을 제외하면 가장 작은 2~N/2에서 나눠지는 수가 없으면 소수이다.

그런데 N/2을 어떻게 적용할 지 모르겠다. 갑자기 루트N이 나오는데 이해를 못 하겠다. 그래서 그 분의 자바 코드를 바탕으로 풀어봤다.

코딩이 이해야? 외워.
