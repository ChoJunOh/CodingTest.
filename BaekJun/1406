import sys

left = sys.stdin.readline()[0:-1]
right = ''
m = int(sys.stdin.readline())

for i in range(0, m):
    inst = sys.stdin.readline().split()
    if inst[0] == 'L':
        if len(left) != 0:
            right += left[-1]
            left = left[0:-1]
    elif inst[0] == 'D':
        if len(right) != 0:
            left += right[-1]
            right = right[0:-1]
    elif inst[0] == 'B':
        if len(left) != 0:
            left = left[0:-1]
    elif inst[0] == 'P':
        left += inst[1]

print(left + right[::-1])

# 처음에는 배열을 이용하여 인덱스를 조정하며 커서를 옮기며 에디터의 기능을 구현 시도. 배열 인덱스를 통해 임의의 위치로 접근.

그런데 이 에디터의 기능은 임의로 n번째의 위치에 접근하는 것이 아니고 왼쪽으로 한 칸(L), 오른쪽으로 한 칸(D), 왼쪽의 있는 문자 한 자 삭제(B), 왼쪽에 문자를 추가(P)하는 것 뿐. 

배열을 사용하면서 가장 문제되는 것이 문자를 삭제한 뒤에 어떻게 재 배열을 할 것인지의 문제.

따라서 자료구조를 스택을 사용. 왼쪽 문자들을 담은 left 스택, 오른쪽의 문자를 담은 right 스택. left는 앞의 문자부터 차례로 들어가고 right는 뒤의 문자부터 차례로 담길 예정. 

여기서, 스택의 밖이 커서로 생각.

L은 커서를 왼쪽으로 한 칸 옮기는 것이기 때문에 왼쪽 스택에서 오른쪽 스택으로 한 글자 이동.
D는 커서를 오른쪽으로 한 칸 옮기는 것이기 때문에 오른쪽 스택에서 왼쪽 스택으로 한 글자 이동.
B는 왼쪽 스택에 있는 가장 위의 문자 한 글자를 삭제.
P는 $라는 글자를 왼쪽 스택에 삽입.
